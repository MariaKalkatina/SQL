-- Внимание! Во всех результирующих выборках должны быть учтены все записи, даже
-- те, которые содержать NULL поля, однако, склейка не должна быть NULL записью!
-- Для этого используйте либо CASE, либо функцию 
-- ISNULL(<выражение>, <значение по умолчанию>) -- Microsoft SQL Server
-- IFNULL(<выражение>, <значение по умолчанию>) -- MySQL
-- COALESCE(<выражение>, <значение по умолчанию>) -- ANSI SQL (стандарт)
-- Соблюдать это условие достаточно для двух полей BIRTHDAY и UNIV_ID.
-- В качестве <значения по умолчания> используйте строку 'unknown'.

-- 1. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала один столбец типа varchar, содержащий последовательность разделенных 
--    символом ';' (точка с запятой) значений столбцов этой таблицы, и при этом 
--    текстовые значения должны отображаться прописными символами (верхний регистр), 
--    то есть быть представленными в следующем виде: 
--    1;КАБАНОВ;ВИТАЛИЙ;M;550;4;ХАРЬКОВ;01/12/1990;2.
--    ...
--    примечание: в выборку должны попасть студенты из любого города из 5 букв
select UPPER(SURNAME) + ';' + UPPER(NAME)  + ';' + UPPER(GENDER)  + ';' +  cast(STIPEND as varchar)  + ';' + cast(COURSE as varchar)
+ ';' + UPPER(CITY)  + ';' + 
case
when BIRTHDAY is null then 'unknown'
else format(BIRTHDAY, 'dd-MM-yyyy')
end
+ ';' + 
+ case
 when univ_id is null then 'unknown'
 else cast(univ_id as varchar)
 end 
 as STUDENT
FROM STUDENTS where len(city)=5

-- 2. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде: 
--    В.КАБАНОВ;местожительства-ХАРЬКОВ;родился-01.12.90
--    ...
--    примечание: в выборку должны попасть студенты, фамилия которых содержит вторую
--    букву 'е' и предпоследнюю букву 'и', либо же фамилия заканчивается на 'ц'
SELECT LEFT(NAME, 1) + '.' + UPPER(SURNAME) + ' , ' + 'местожительства-' + ' ' + UPPER(CITY) + ';' + 'родился ' +
case
	when BIRTHDAY is null then 'unknown'
	else format(BIRTHDAY, 'dd-MM-yyyy')
end as STUDENT
from STUDENTS where SURNAME like '_е%и_' OR SURNAME like '%ц'

-- 3. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    т.цилюрик;местожительства-Херсон; учится на IV курсе
--    ...
--    примечание: курс указать римскими цифрами (воспользуйтесь CASE), 
--    отобрать студентов, стипендия которых кратна 200
select LOWER(LEFT(NAME, 1)) + '.' + LOWER(SURNAME) + ' , ' + 'местожительство' + '-' + CITY + ';' + 'учится на ' + 
case COURSE
	when 1 then 'I'
	when 2 then 'II'
	when 3 then 'III'
	when 4 then 'IV'
	when 5 then 'V'
end
+ ' курсе' as STUDENT
from STUDENTS where STIPEND %200=0
-- 4. Составьте запрос для таблицы STUDENT таким образом, чтобы выборка 
--    содержала столбец в следующего вида:
--     Нина Федосеева из г.Днепропетровск родилась в 1992 году
--     ...
--     Дмитрий Коваленко из г.Хмельницкий родился в 1993 году
--     ...
--     примечание: для всех городов, в которых более 8 букв
select NAME + ' ' + SURNAME + ' из г. ' + CITY +
case GENDER when  'f' then ' родилась'
	 when  'm' then ' родился'
end +
' в ' + FORMAT(BIRTHDAY, 'yyyy ') + 'году' as STUDENT
from STUDENTS where len(CITY)>8

-- 5. Вывести фамилии, имена студентов и величину получаемых ими стипендий, 
--    при этом значения стипендий первокурсников должны быть увеличены на 17.5%
select SURNAME, NAME, STIPEND
,case COURSE
	when 1 then STIPEND*1.175
	else STIPEND 
end as HIGHER_STIPEND
from STUDENTS

-- 6. Вывести наименования всех учебных заведений и их расстояния 
--    (придумать/нагуглить/взять на глаз) до Киева.
select NAME
, case CITY
	when 'Киев' then 0
	when 'Львов' then 500
	when 'Харьков' then 700
	when 'Днепр' then 600
	when 'Донецк' then 700
	when 'Одесса' then 600
	when 'Тернополь' then 500
	when 'Запорожье' then 760
	when 'Белая Церковь' then 150
	when 'Херсон' then 800
end as Distance
from UNIVERSITIES

-- 7. Вывести все учебные заведения и их две последние цифры рейтинга.
select NAME, right(RATING, 2)
from UNIVERSITIES

-- 8. Составьте запрос для таблицы UNIVERSITY таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    Код-1;КПИ-г.Киев;рейтинг относительно ДНТУ(501) +756
--    ...
--    Код-11;КНУСА-г.Киев;рейтинг относительно ДНТУ(501) -18
--    ...
--    примечание: рейтинг вычислить относительно ДНТУшного, а также должен 
--    присутствовать знак (+/-), рейтинг ДНТУ заранее известен = 501

select  concat('Код-', id,  ';'  , NAME, '-г.' , CITY , ';рейтинг относительно ДНТУ(501) ' 
, case when rating - 501 > 0 then '+' end, rating - 501)
from UNIVERSITIES
-- 9. Составьте запрос для таблицы UNIVERSITY таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    Код-1;КПИ-г.Киев;рейтинг состоит из 12 сотен
--    Код-2;КНУ-г.Киев;рейтинг состоит из 6 сотен
--    ...
--    примечание: в рейтинге необходимо указать кол-во сотен
select  concat('Код-', id, ';' , NAME , '-г.' , CITY , ';рейтинг состоит из ', 
floor(RATING/100) ,' сотен') as rating
from UNIVERSITIES 